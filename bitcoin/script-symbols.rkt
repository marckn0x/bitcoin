#lang racket

(provide (all-defined-out))

(define op=>name (make-hasheq))
(define name=>op (make-hasheq))

(define (op->name op)
  (hash-ref op=>name op))

(define (name->op name)
  (hash-ref name=>op name))

(define-syntax-rule (def-op name code)
  (begin
    (define name code)
    (hash-set! op=>name code 'name)
    (hash-set! name=>op 'name code)))

(def-op OP_0 #x00)
(hash-set! name=>op 'OP_FALSE OP_0)
(def-op OP_PUSHDATA1 #x4c)
(def-op OP_PUSHDATA2 #x4d)
(def-op OP_PUSHDATA4 #x4e)
(def-op OP_1NEGATE #x4f)
(def-op OP_RESERVED #x50)
(def-op OP_1 #x51)
(hash-set! name=>op 'OP_TRUE OP_1)
(def-op OP_2 #x52)
(def-op OP_3 #x53)
(def-op OP_4 #x54)
(def-op OP_5 #x55)
(def-op OP_6 #x56)
(def-op OP_7 #x57)
(def-op OP_8 #x58)
(def-op OP_9 #x59)
(def-op OP_10 #x5a)
(def-op OP_11 #x5b)
(def-op OP_12 #x5c)
(def-op OP_13 #x5d)
(def-op OP_14 #x5e)
(def-op OP_15 #x5f)
(def-op OP_16 #x60)
(def-op OP_NOP #x61)
(def-op OP_VER #x62)
(def-op OP_IF #x63)
(def-op OP_NOTIF #x64)
(def-op OP_VERIF #x65)
(def-op OP_VERNOTIF #x66)
(def-op OP_ELSE #x67)
(def-op OP_ENDIF #x68)
(def-op OP_VERIFY #x69)
(def-op OP_RETURN #x6a)
(def-op OP_TOALTSTACK #x6b)
(def-op OP_FROMALTSTACK #x6c)
(def-op OP_2DROP #x6d)
(def-op OP_2DUP #x6e)
(def-op OP_3DUP #x6f)
(def-op OP_2OVER #x70)
(def-op OP_2ROT #x71)
(def-op OP_2SWAP #x72)
(def-op OP_IFDUP #x73)
(def-op OP_DEPTH #x74)
(def-op OP_DROP #x75)
(def-op OP_DUP #x76)
(def-op OP_NIP #x77)
(def-op OP_OVER #x78)
(def-op OP_PICK #x79)
(def-op OP_ROLL #x7a)
(def-op OP_ROT #x7b)
(def-op OP_SWAP #x7c)
(def-op OP_TUCK #x7d)
(def-op OP_CAT #x7e)
(def-op OP_SUBSTR #x7f)
(def-op OP_LEFT #x80)
(def-op OP_RIGHT #x81)
(def-op OP_SIZE #x82)
(def-op OP_INVERT #x83)
(def-op OP_AND #x84)
(def-op OP_OR #x85)
(def-op OP_XOR #x86)
(def-op OP_EQUAL #x87)
(def-op OP_EQUALVERIFY #x88)
(def-op OP_RESERVED1 #x89)
(def-op OP_RESERVED2 #x8a)
(def-op OP_1ADD #x8b)
(def-op OP_1SUB #x8c)
(def-op OP_2MUL #x8d)
(def-op OP_2DIV #x8e)
(def-op OP_NEGATE #x8f)
(def-op OP_ABS #x90)
(def-op OP_NOT #x91)
(def-op OP_0NOTEQUAL #x92)
(def-op OP_ADD #x93)
(def-op OP_SUB #x94)
(def-op OP_MUL #x95)
(def-op OP_DIV #x96)
(def-op OP_MOD #x97)
(def-op OP_LSHIFT #x98)
(def-op OP_RSHIFT #x99)
(def-op OP_BOOLAND #x9a)
(def-op OP_BOOLOR #x9b)
(def-op OP_NUMEQUAL #x9c)
(def-op OP_NUMEQUALVERIFY #x9d)
(def-op OP_NUMNOTEQUAL #x9e)
(def-op OP_LESSTHAN #x9f)
(def-op OP_GREATERTHAN #xa0)
(def-op OP_LESSTHANOREQUAL #xa1)
(def-op OP_GREATERTHANOREQUAL #xa2)
(def-op OP_MIN #xa3)
(def-op OP_MAX #xa4)
(def-op OP_WITHIN #xa5)
(def-op OP_RIPEMD160 #xa6)
(def-op OP_SHA1 #xa7)
(def-op OP_SHA256 #xa8)
(def-op OP_HASH160 #xa9)
(def-op OP_HASH256 #xaa)
(def-op OP_CODESEPARATOR #xab)
(def-op OP_CHECKSIG #xac)
(def-op OP_CHECKSIGVERIFY #xad)
(def-op OP_CHECKMULTISIG #xae)
(def-op OP_CHECKMULTISIGVERIFY #xaf)
(def-op OP_NOP1 #xb0)
(def-op OP_NOP2 #xb1)
(hash-set! name=>op 'OP_CHECKLOCKTIMEVERIFY OP_NOP2)
(def-op OP_NOP3 #xb2)
(hash-set! name=>op 'OP_CHECKSEQUENCEVERIFY OP_NOP3)
(def-op OP_NOP4 #xb3)
(def-op OP_NOP5 #xb4)
(def-op OP_NOP6 #xb5)
(def-op OP_NOP7 #xb6)
(def-op OP_NOP8 #xb7)
(def-op OP_NOP9 #xb8)
(def-op OP_NOP10 #xb9)